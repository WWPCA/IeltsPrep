name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug/release)'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
      
    - name: Build web assets
      run: |
        # Ensure web assets directory exists and copy templates (Flask app to Capacitor web)
        mkdir -p static
        cp -r templates/* static/ 2>/dev/null || true
        echo "Web assets prepared for Android:"
        ls -la static/
        
    - name: Sync Capacitor
      run: |
        npx cap sync android
        
    - name: Setup Android Release Signing
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      run: |
        # Create keystore from user's secure secrets
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
        
        # Create signing config
        cat > android/app/release-signing.properties << EOF
        storeFile=release.keystore
        storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
        keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
        EOF
        
    - name: Build Android Debug APK
      if: github.event.inputs.build_type == 'debug' || github.ref != 'refs/heads/main'
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --info --stacktrace
        
    - name: Build Android Release APK
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleRelease --info --stacktrace
        
    - name: Upload Debug APK
      if: github.event.inputs.build_type == 'debug' || github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: ielts-genai-prep-debug-${{ github.run_number }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: ielts-genai-prep-release-${{ github.run_number }}
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 90
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' && (github.event.inputs.build_type == 'release' || github.event.inputs.build_type == '')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: IELTS GenAI Prep v${{ github.run_number }}
        body: |
          Automated release build for IELTS GenAI Prep
          
          ## Changes
          - Built from commit: ${{ github.sha }}
          - Build number: ${{ github.run_number }}
          
          ## Downloads
          - Android APK: Available in release assets
          
        files: android/app/build/outputs/apk/release/app-release.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}